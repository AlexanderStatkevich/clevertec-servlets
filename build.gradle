plugins {
    id 'java'
    id 'war'
    id 'io.freefair.aspectj.post-compile-weaving' version '6.6.3'
}

group 'com.statkevich'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation(
            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'org.apache.commons:commons-dbcp2:2.9.0',
            'org.postgresql:postgresql:42.5.1',
            "org.mapstruct:mapstruct:${mapstructVersion}",
            'org.yaml:snakeyaml:2.0',
            'org.aspectj:aspectjrt:1.9.19',
            "org.apache.logging.log4j:log4j-core:${log4jVersion}",
            "org.apache.logging.log4j:log4j-api:${log4jVersion}",
            "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}",
            'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1',
            'com.itextpdf:itextpdf:5.5.10'
    )

    compileOnly(
            'javax.servlet:javax.servlet-api:3.0.1',
            "org.projectlombok:lombok:1.18.24")

    annotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
            "org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "org.testcontainers:postgresql:${testcontainersVersion}",
            "org.testcontainers:junit-jupiter:${testcontainersVersion}",
            'org.assertj:assertj-core:3.24.2',
            'org.mockito:mockito-core:5.1.1',
            'org.mockito:mockito-junit-jupiter:2.17.0')
}

test {
    useJUnitPlatform()
}
